-- MySQL Script generated by MySQL Workbench
-- Mon Jun 26 12:09:36 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema pro_buddy
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema pro_buddy
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pro_buddy` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `pro_buddy` ;

-- -----------------------------------------------------
-- Table `pro_buddy`.`user_interests`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pro_buddy`.`user_interests` ;

CREATE TABLE IF NOT EXISTS `pro_buddy`.`user_interests` (
  `auth_user_id` INT NOT NULL,
  `user_interests` VARCHAR(100) NOT NULL,
  INDEX `fk_auth_user_idx` (`auth_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_auth_user_1`
    FOREIGN KEY (`auth_user_id`)
    REFERENCES `pro_buddy`.`auth_user` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pro_buddy`.`user_services`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pro_buddy`.`user_services` ;

CREATE TABLE IF NOT EXISTS `pro_buddy`.`user_services` (
  `auth_user_id` INT NOT NULL,
  `user_services` VARCHAR(100) NOT NULL,
  INDEX `fk_auth_user_idx` (`auth_user_id` ASC) VISIBLE,
  CONSTRAINT `fk_auth_user_2`
    FOREIGN KEY (`auth_user_id`)
    REFERENCES `pro_buddy`.`auth_user` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pro_buddy`.`buddy_groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pro_buddy`.`buddy_groups` ;

CREATE TABLE IF NOT EXISTS `pro_buddy`.`buddy_groups` (
  `id` INT NOT NULL,
  `owner` INT NOT NULL,
  `name` VARCHAR(100) NULL,
  `description` VARCHAR(300) NULL,
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_auth_users_idx` (`owner` ASC) VISIBLE,
  CONSTRAINT `fk_auth_user_3`
    FOREIGN KEY (`owner`)
    REFERENCES `pro_buddy`.`auth_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pro_buddy`.`user_buddies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pro_buddy`.`user_buddies` ;

CREATE TABLE IF NOT EXISTS `pro_buddy`.`user_buddies` (
  `auth_user_id` INT NOT NULL,
  `auth_friend_id` INT NOT NULL,
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  INDEX `fk_auth_user_idx` (`auth_user_id` ASC) VISIBLE,
  INDEX `fk_auth_friend_idx` (`auth_friend_id` ASC) VISIBLE,
  CONSTRAINT `fk_auth_user_6`
    FOREIGN KEY (`auth_user_id`)
    REFERENCES `pro_buddy`.`auth_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_friend`
    FOREIGN KEY (`auth_friend_id`)
    REFERENCES `pro_buddy`.`auth_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pro_buddy`.`buddy_group_events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pro_buddy`.`buddy_group_events` ;

CREATE TABLE IF NOT EXISTS `pro_buddy`.`buddy_group_events` (
  `id` INT NOT NULL,
  `buddy_group_id` INT NOT NULL,
  `start_date_time` DATETIME NOT NULL,
  `end_date_time` DATETIME NOT NULL,
  `is_online` TINYINT NOT NULL DEFAULT 0,
  `meeting_url` VARCHAR(100) NULL,
  `organizer_id` INT NOT NULL,
  `is_finished` TINYINT NOT NULL DEFAULT 0,
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_auth_user_idx` (`organizer_id` ASC) VISIBLE,
  CONSTRAINT `fk_buddy_groups`
    FOREIGN KEY (`id`)
    REFERENCES `pro_buddy`.`buddy_groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_auth_user_5`
    FOREIGN KEY (`organizer_id`)
    REFERENCES `pro_buddy`.`auth_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pro_buddy`.`buddy_group_event_reviews`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pro_buddy`.`buddy_group_event_reviews` ;

CREATE TABLE IF NOT EXISTS `pro_buddy`.`buddy_group_event_reviews` (
  `id` INT NOT NULL,
  `participant_id` INT NOT NULL,
  `rating` TINYINT NULL,
  `comment` VARCHAR(300) NULL,
  `reply_review_id` INT NULL,
  `create_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` DATETIME NULL,
  `group_event_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_auth_user_idx` (`participant_id` ASC) VISIBLE,
  INDEX `fk_event_review_idx` (`reply_review_id` ASC) VISIBLE,
  INDEX `fk_group_event_idx` (`group_event_id` ASC) VISIBLE,
  CONSTRAINT `fk_auth_user_4`
    FOREIGN KEY (`participant_id`)
    REFERENCES `pro_buddy`.`auth_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_review`
    FOREIGN KEY (`reply_review_id`)
    REFERENCES `pro_buddy`.`buddy_group_event_reviews` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_group_event`
    FOREIGN KEY (`group_event_id`)
    REFERENCES `pro_buddy`.`buddy_group_events` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
